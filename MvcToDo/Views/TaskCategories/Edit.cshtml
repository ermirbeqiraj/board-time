@model DbModel.TaskCategory

@{
    ViewBag.Title = "Edit";
}

<h3>Edit Task Category</h3>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Caption, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Caption, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Caption, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.DropDownListFor(model => model.Color, (SelectList)ViewBag.ColorsCat
         , new { @class = "form-control", @onchange = "SelectedColorChanged(this.value);" })
                @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-5">
                <span id="selectedColor" class="@Model.Color">SelectedColor</span>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script>
    function SelectedColorChanged(val) {
        val = val.replace("label ","");
        document.getElementById('selectedColor').className = "label " + val.toString();
    }
</script>
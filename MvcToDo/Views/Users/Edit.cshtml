@model MvcToDo.ModelsView.EditUser

@{
    ViewBag.Title = "Edit";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <div class="row">
            <div class="col-md-10">
                @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)

                <div class="panel panel-primary">
                    <div class="panel-heading">
                        <h3 class="panel-title">Edit User</h3>
                    </div>
                    <div class="panel-body">
                        <div class="form-group">
                            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Roles, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.CheckBoxListFor(model => model.Roles
                                            , model => model.Roles
                                            , model => model.Id
                                            , model => model.Text
                                            , model => model.Checked
                                            , model => new { @class = "checkbox-inline" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="panel panel-primary">
                    <div class="panel-heading">
                        <h3 class="panel-title">Is Customer</h3>
                    </div>
                    <div class="panel-body">
                        <div class="form-group">
                            <label class="control-label col-md-2" for="chkIsCustomer">User is Customer</label>
                            <div class="col-md-10">
                                @Html.CheckBox("chkIsCustomer", (Model.CustomerId.HasValue == true), new { @class = "checkbox-inline" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-2">Customer</label>
                            <div class="form-group">
                                @Html.DropDownListFor(model => model.CustomerId, (SelectList)ViewBag.Customer,"", new { @class="form-control" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                    <div>
                        @Html.ActionLink("Back to List", "Index")
                    </div>
                </div>
            </div>
        </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
